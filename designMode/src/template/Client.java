package template;

/**
 *
 *   模板方法是基于继承实现的，在抽象父类中声明一个模板方法，并在模板方法中定义算法的执行步骤（即算法骨架）。
 *   在模板方法模式中，可以将子类共性的部分放在父类中实现，而特性的部分延迟到子类中实现，只需将特性部分在父类中声明成抽象方法即可，
 *   使得子类可以在不改变算法结构的情况下，重新定义算法中的某些步骤，不同的子类可以以不同的方式来实现这些逻辑。
 *
 *         模板方法模式的优点在于符合“开闭原则”，也能够实现代码复用，将不变的行为转移到父类，去除子类中的重复代码。
 *         但是缺点是不同的实现都需要定义一个子类，导致类的个数的增加使得系统更加庞大，设计更加抽象。
 *
 *         模板方法是一个方法，那么他与普通方法有什么不同呢？模板方法是定义在抽象类中，把基本操作方法组合在一起形成一个总算法或者一组步骤的方法。
 *         而普通的方法是实现各个步骤的方法，我们可以认为普通方法是模板方法的一个组成部分。
 */
public class Client {
    public static void main(String[] args) {
        Person student = new Student();
        student.prepareGotoSchool();

        Person teacher  = new Teacher();
        teacher.prepareGotoSchool();
    }
}
